a < available.packages()
a <- available.packages()
head(rownames(a), 3)
head(rownames(a), 3)
head(rownames(a), 20)
install.packages("slidify")
install.packages("KernSmooth")
install.packages("KernSmooth")
KernSmooth
load("KernSmooth")
library("KernSmooth")
library(KernSmooth)
search()
find.package("devtools")
envVariables = Sys.getenv()
envVariables["PATH"]
envVariables["MYSQL_HOME"]
install.packages("RMySQL", type = "source")
install.packages('RMySQL',type='source')
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1,2.0,by=0.1), dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
df = data.frame(1L:5L, seq(0,1,length.out=5), c("aB", "cde", "fghi", "a", "s"), stringsAsfactors=FALSE)
h5write(df, "example.h5", "df")
h5ls("example.h5")
readA = h5read("example.h5", "foo/A")
readA
readA = h5read("example.h5", "foo/foobaa/B")
readA = h5read("example.h5", "foo/foobaa/B")
readA
source('C:/Users/mismail/Google Drive/GIT_M0eB/ProgrammingAssignment2/cachemeanExample.R')
makeVector()
x <- makeVector()
x
a <- makeVector(c(1,2,3))
a
a$get()
a$set(c(4,5,6))
a$get
a$get()
class(a)
class(a$get)
b <- cachemean(a)
b
b <- cachemean(a)
b
b
b <- cachemean(a)
c <- cachemean(a)
source('C:/Users/mismail/Google Drive/GIT_M0eB/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/mismail/Google Drive/GIT_M0eB/ProgrammingAssignment2/cachematrix.R')
matic(5)
magic(5)
bb=replicate(2, rnorm(20))
bb
bb=replicate(2, rnorm(2))
bb
inv <- solve(bb)
inv
makeCacheMatrix(replicate(2, rnorm(2)))
mtx <- makeCacheMatrix(replicate(2, rnorm(2)))
cacheSolve(mtx)
cacheSolve(mtx)
cacheSolve(mtx)
mtx <- makeCacheMatrix(replicate(3, rnorm(3)))
mtx
mtx$getInverse
mtx$getInverse()
cacheSolve(mtx)
cacheSolve(mtx)
x <- makeCacheMatrix()
x
mtx <- makeCacheMatrix(replicate(4, rnorm(4)))
mtx
mtx#getInverse
mtx#getInverse()
mtx$getInverse()
cacheSolve(mtx)
mtx$getInverse()
cacheSolve(mtx)
source('C:/Users/mismail/Google Drive/GIT_M0eB/ProgrammingAssignment2/cachematrix.R')
mtx <- makeCacheMatrix(replicate(4, rnorm(4)))
mtx$getInverse()
cacheSolve(mtx)
cacheSolve(mtx)
getwd()
setwd("C:/users/mismail/Google Drive/@ Study/Coursera_Data_Science/2_R_Programming/Programming Assignment 3 - Hospital Data/")
getwd()
dir()
